"use client";
import { useState, useEffect } from "react";
import { Button } from "@/components/ui/button";
import { CongratulationPage } from "@/components/congratulation-page";
import { useLanguage } from "@/contexts/language-context";
import { saveLessonCompleteServer } from "@/actions/progress";
import PythonCodeRunner from "@/components/python-code-runner";
import { CodeSnippet } from "@/components/ui/code-snippet";
import { Dialog, DialogContent, DialogTitle } from "@/components/ui/dialog";

export const PythonLesson1Content = ({ lessonTitle, currentStep }: { lessonTitle: string; currentStep: number }) => {
  const [showCongratulations, setShowCongratulations] = useState(false);
  const [isCompleting, setIsCompleting] = useState(false);
  const [showCodePlayground, setShowCodePlayground] = useState(false);
  const [currentCode, setCurrentCode] = useState("");
  const [showHints, setShowHints] = useState(false);
  const [currentHint, setCurrentHint] = useState("");
  const [solutionCode, setSolutionCode] = useState("");
  const [isProblemStep, setIsProblemStep] = useState(false);
  const { language } = useLanguage();
  // Hoisted Nepali runner state to respect hooks rules
  const [runnerOpenNp, setRunnerOpenNp] = useState(false as any);
  const [runnerCodeNp, setRunnerCodeNp] = useState("");
  const tryNowNepali = (code: string) => { setRunnerCodeNp(code); setRunnerOpenNp(true); };

  const handleFinishLesson = async () => {
    try {
      setIsCompleting(true);
      // Mark lesson as completed in the database
      await saveLessonCompleteServer("python", "lesson-1", 25);
      setShowCongratulations(true);
    } catch (error) {
      console.error("Error completing lesson:", error);
      alert("Failed to complete lesson. Please try again.");
    } finally {
      setIsCompleting(false);
    }
  };

  const handleContinue = () => {
    setShowCongratulations(false);
    // Navigate to lesson 2 instead of learn page
    window.location.href = "/lesson/lesson-2";
  };

  const handlePracticeAgain = () => {
    setShowCongratulations(false);
    // Reset to first step
    window.location.href = "/lesson/lesson-1/python-introduction";
  };

  const handleTryNow = (code: string, hint?: string, question?: string) => {
    // For Problem steps, show the question in comment format
    const displayCode = isProblemStep && question ? `# ${question}` : code;
    setCurrentCode(displayCode);
    setCurrentHint(hint || "");
    setIsProblemStep(currentStep === 6);
    setShowCodePlayground(true);
  };

  const handleHints = (hint: string) => {
    setCurrentHint(hint);
    setShowHints(true);
  };

  const handleShowSolution = () => {
    // Show the solution code in the playground
    setCurrentCode(solutionCode);
    setShowHints(false);
  };

  const handleCloseHints = () => {
    setShowHints(false);
    setCurrentHint("");
  };

  const handleClosePlayground = () => {
    setShowCodePlayground(false);
  };

  // Hints modal component with solution button
  const HintsModal = () => {
    return (
      <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
        <div className="bg-white rounded-lg w-full max-w-2xl max-h-[80vh] flex flex-col">
          <div className="flex justify-between items-center p-4 border-b">
            <h3 className="text-lg font-semibold text-blue-600">ЁЯТб Hints</h3>
            <button 
              onClick={handleCloseHints}
              className="text-gray-500 hover:text-gray-700 text-xl"
            >
              ├Ч
            </button>
          </div>
          
          <div className="p-6 overflow-auto">
            <div className="text-neutral-700 leading-relaxed mb-4">
              {currentHint}
            </div>
            
            {/* Show solution button for Problem steps */}
            {isProblemStep && solutionCode && (
              <div className="mt-4 p-4 bg-gray-50 rounded-lg">
                <p className="text-sm text-gray-600 mb-2">Still need help? Click below to see the solution:</p>
                <Button
                  onClick={handleShowSolution}
                  className="bg-green-600 hover:bg-green-700 text-white"
                >
                  Show Solution Code
                </Button>
              </div>
            )}
          </div>
          
          <div className="p-4 border-t bg-gray-50 rounded-b-lg">
            <div className="flex justify-end">
              <Button
                onClick={handleCloseHints}
                className="bg-blue-600 hover:bg-blue-700 text-white px-6"
              >
                Got it!
              </Button>
            </div>
          </div>
        </div>
      </div>
    );
  };

  // OneCompiler iframe embed for code execution
  const CodePlayground = () => {
    useEffect(() => {
      const frame = document.getElementById('oc-editor') as HTMLIFrameElement;
      
      if (frame && currentCode) {
        const starter = {
          eventType: 'populateCode',
          language: 'python',
          files: [
            {
              name: 'main.py',
              content: currentCode
            }
          ]
        };

        const handleLoad = () => {
          frame.contentWindow?.postMessage(starter, '*');
        };

        frame.addEventListener('load', handleLoad);
        
        if (frame.contentDocument?.readyState === 'complete') {
          handleLoad();
        }

        return () => {
          frame.removeEventListener('load', handleLoad);
        };
      }
    }, [currentCode]);

    return (
      <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
        <div className="bg-white rounded-lg w-full max-w-6xl h-[90vh] flex flex-col">
          <div className="flex justify-between items-center p-4 border-b">
            <div className="flex items-center gap-3">
              <h3 className="text-lg font-semibold">Python Code Playground</h3>
              {/* Only show HINT button for Problem steps */}
              {isProblemStep && currentHint && (
                <Button 
                  onClick={() => handleHints(currentHint)}
                  className="bg-blue-600 hover:bg-blue-700 text-white font-semibold px-3 py-1 text-sm rounded-lg shadow-md transform hover:scale-105 transition-all duration-200"
                  size="sm"
                >
                  HINT
                </Button>
              )}
            </div>
            <button 
              onClick={handleClosePlayground}
              className="text-gray-500 hover:text-gray-700 text-xl"
            >
              ├Ч
            </button>
          </div>
          <div className="flex-1 p-4">
            <PythonCodeRunner initialCode={currentCode} height={560} />
          </div>
        </div>
      </div>
    );
  };

  // Show congratulation page when lesson is completed
  if (showCongratulations) {
    return (
      <div className="flex-1">
        <div className="h-full flex flex-col">
          <div className="lg:min-h-[350px] lg:w-[1200px] w-full px-6 lg:px-0 flex flex-col ml-12 h-full relative">
            <CongratulationPage
              points={25}
              hearts={3}
              onContinue={handleContinue}
              onPracticeAgain={handlePracticeAgain}
              title="Congratulations! You've completed Python Introduction!"
              lessonTitle="Python Introduction"
              showHearts={true}
            />
          </div>
        </div>
      </div>
    );
  }

  // Nepali translation branch for Lesson 1
  if (language === "ne") {
    return (
      <div className="flex-1">
        <div className="h-full flex flex-col">
          <div className="lg:min-h-[350px] lg:w-[1200px] w-full px-6 lg:px-0 flex flex-col ml-12 h-full relative">
            <div className="text-left mt-4 ml-1">
              <h1 className="text-2xl lg:text-4xl font-bold text-neutral-700">
                {currentStep === 1 ? "Python рдХреЛ рдкрд░рд┐рдЪрдп" : currentStep === 2 ? "рдЗрддрд┐рд╣рд╛рд╕" : currentStep === 3 ? "рдХрд┐рди Python рд▓реЛрдХрдкреНрд░рд┐рдп рдЫ?" : currentStep === 4 ? "Python рдХрд╛ рдкреНрд░рдпреЛрдЧ рдХреНрд╖реЗрддреНрд░" : currentStep === 5 ? "рдкрд╣рд┐рд▓реЛ рдкреНрд░реЛрдЧреНрд░рд╛рдо" : currentStep === 6 ? "рдЕрднреНрдпрд╛рд╕ рдкреНрд░рд╢реНрди" : "рдХреНрд╡рд┐рдЬ"}
              </h1>
            </div>

            {currentStep === 1 && (
              <div className="mt-8 space-y-6">
                <p className="text-neutral-700">Python рдПрдХ <strong>high-level programming language</strong> рд╣реЛ, рдЬрд╕рдХреЛ рдорддрд▓рдм рдпреЛ рдорд╛рдиреНрдЫреЗрдХреЛ рднрд╛рд╖рд╛рдЬрд╕реНрддреИ рд╕рдЬрд┐рд▓реЛ рдЫ рд░ рдХрдореНрдкреНрдпреБрдЯрд░рд▓рд╛рдИ рдмреБрдЭрд╛рдЙрди рд╕рдЬрд┐рд▓реЛ рд╣реБрдиреНрдЫред рдпреЛ <strong>interpreted</strong> рд╣реЛ рд░ <strong>general-purpose</strong> рдЫ тАФ Web apps, AI, Games, Data science, Automation рд╕рдмреИрдорд╛ рдкреНрд░рдпреЛрдЧ рд╣реБрдиреНрдЫред</p>
                <CodeSnippet language="python" code={`print("Hello, Python!")`} onRun={tryNowNepali} />
                <div className="mt-2"><CodeSnippet isOutput language="output" code={`Hello, Python!`} /></div>
                <p className="text-neutral-700">print() рд▓реЗ рдХрдореНрдкреНрдпреБрдЯрд░рд▓рд╛рдИ &quot;рдпреЛ рджреЗрдЦрд╛рдК&quot; рднрдиреНрдЫ, рддреНрдпрд╕реИрд▓реЗ рдзреЗрд░реИ рднрд╛рд╖рд╛ &quot;Hello World&quot; рдмрд╛рдЯ рд╕реБрд░реБ рд╣реБрдиреНрдЫред</p>
                <p className="text-blue-700">ЁЯТб Motivation: Python рд╕рд┐рдХреНрджрд╛ Web Development рджреЗрдЦрд┐ AI рд╕рдореНрдо рдХрд░рд┐рдпрд░ рдЦреБрд▓реНрдЫред</p>
                <p className="text-purple-700">ЁЯШВ Fun: Python рдирд╛рдо рд╕рд░реНрдкрдмрд╛рдЯ рд╣реЛрдЗрди, Monty Python comedy рд╢реЛрдмрд╛рдЯ рдЖрдПрдХреЛ рд╣реЛ ЁЯРНЁЯШВред</p>
              </div>
            )}

            {currentStep === 2 && (
              <div className="mt-8 space-y-4">
                <p className="text-neutral-700">Python Guido van Rossum рд▓реЗ 1980s рдЕрдиреНрддреНрдпрддрд┐рд░ рдмрдирд╛рдП рд░ 1991 рдорд╛ рд╕рд╛рд░реНрд╡рдЬрдирд┐рдХ рднрдпреЛред рдирд╛рдо comedy рд╢реЛрдмрд╛рдЯ рдЖрдПрдХреЛ рд╣реЛред Guido рдХреЛ рд▓рдХреНрд╖реНрдп рд╕рд░рд▓, рд░рдорд╛рдЗрд▓реЛ рд░ рд╢рдХреНрддрд┐рд╢рд╛рд▓реА рднрд╛рд╖рд╛ рдмрдирд╛рдЙрдиреБ рдерд┐рдпреЛред</p>
                <p className="text-blue-700">ЁЯТб Motivation: рд░рдорд╛рдЗрд▓реЛрдХрд╛ рд▓рд╛рдЧрд┐ рд╕реБрд░реБ рднрдПрдХреЛ рднрд╛рд╖рд╛ рдЖрдЬ рдХрд░реЛрдбреМрдБ Developer рд▓реЗ рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдЫрдиреНред</p>
                <p className="text-purple-700">ЁЯШВ Fun: рд╢реБрд░реБрдорд╛ hobby language рднрдирд┐рдПрдХреЛ Python рд▓реЗ рдЖрдЬ Job рджрд┐рдиреНрдЫ ЁЯШВред</p>
              </div>
            )}

            {currentStep === 3 && (
              <div className="mt-8 space-y-4">
                <ul className="list-disc pl-6 text-neutral-700 space-y-1">
                  <li>Simple Syntax тАФ English рдЬрд╕реНрддреИ</li>
                  <li>Versatile тАФ Web, AI, Automation, Data</li>
                  <li>Huge Libraries тАФ NumPy, Pandas, TensorFlow</li>
                  <li>Cross-platform тАФ Windows, Mac, Linux</li>
                  <li>Community тАФ рд▓рд╛рдЦреМрдБ Developer</li>
                </ul>
                <p className="text-blue-700">ЁЯТб Motivation: Google, Netflix, NASA рдЬрд╕реНрддрд╛ рдХрдореНрдкрдиреАрд▓реЗ Python рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдЫрдиреНред</p>
                <p className="text-purple-700">ЁЯШВ Fun: Syntax рдкрдвреНрджрд╛ рдХрд╣рд┐рд▓реЗрдХрд╛рд╣реАрдБ рдЕрдВрдЧреНрд░реЗрдЬреА рдкрдвреЗрдЬрд╕реНрддреЛ рд▓рд╛рдЧреНрдЫтАж grammar teacher рдЪрд╛рд╣рд┐рдБ Python рд▓реЗ fail рдЧрд░реНрдЫ ЁЯШВред</p>
              </div>
            )}

            {currentStep === 4 && (
              <div className="mt-8 space-y-4">
                <ul className="list-disc pl-6 text-neutral-700 space-y-1">
                  <li>ЁЯМН Web Development тЖТ Django, Flask</li>
                  <li>ЁЯУК Data Science тЖТ Pandas, NumPy</li>
                  <li>ЁЯдЦ AI тЖТ TensorFlow, PyTorch</li>
                  <li>тЪЩя╕П Automation тЖТ Scripts рд░ Bots</li>
                  <li>ЁЯОо Game Development тЖТ Pygame</li>
                </ul>
                <div className="text-neutral-700 space-y-1">
                  <p>тАв Netflix тЖТ Recommendation system Python рдорд╛</p>
                  <p>тАв Instagram тЖТ Backend Python</p>
                  <p>тАв ChatGPT (OpenAI) тЖТ AI training/serving рдорд╛ Python</p>
                </div>
                <p className="text-blue-700">ЁЯТб Motivation: Netflix рд╡рд╛ ChatGPT рдмрдирд╛рдЗрдПрдХреЛ рднрд╛рд╖рд╛ рд╕рд┐рдХреНрджрд╛ рдЙрддреНрд╕рд╛рд╣ рдЖрдЙрдБрдЫред</p>
                <p className="text-purple-700">ЁЯШВ Fun: Mini-Netflix рдмрдирд╛рдЙрди рд╕рдХрд┐рдиреНрдЫтАж рддрд░ password рд╕рд╛рдереАрд▓рд╛рдИ рдирджрд┐рдиреЗ ЁЯШВред</p>
              </div>
            )}

            {currentStep === 5 && (
              <div className="mt-8 space-y-6">
                <CodeSnippet language="python" code={`print("Welcome to Python Programming!")`} onRun={tryNowNepali} />
                <div className="mt-2"><CodeSnippet isOutput language="output" code={`Welcome to Python Programming!`} /></div>
                <ul className="list-disc pl-6 text-neutral-700 space-y-1">
                  <li>print() тЖТ Output рджреЗрдЦрд╛рдЙрди</li>
                  <li>() тЖТ function рднрд┐рддреНрд░ data рдкрдард╛рдЙрди</li>
                  <li>&quot; &quot; рд╡рд╛ ' ' тЖТ Text/string define рдЧрд░реНрди</li>
                </ul>
                <p className="text-blue-700">ЁЯТб Motivation: рдпреЛ рдиреИ рдкрд╣рд┐рд▓реЛ step тАФ Computer рд╕рдБрдЧ рдХреБрд░рд╛ рдЧрд░реНрдиреЗ</p>
                <p className="text-purple-700">ЁЯШВ Fun: рдЕрдм рддрдкрд╛рдИрдВ Hello World club рдХрд╛ coder! ЁЯОЙ</p>
              </div>
            )}

            {currentStep === 6 && (
              <div className="mt-8 space-y-4">
                <h3 className="text-lg font-semibold text-neutral-800">ЁЯФз рдЕрднреНрдпрд╛рд╕ рдкреНрд░рд╢реНрди</h3>
                <ul className="list-disc pl-6 text-neutral-700 space-y-1">
                  <li>рдЖрдлреНрдиреЛ рдирд╛рдо print рдЧрд░реНрдиреЗ code рд▓реЗрдЦред</li>
                  <li>&quot;Python is fun!&quot; line print рдЧрд░ред</li>
                  <li>рей рдлрд░рдХ рд▓рд╛рдЗрди print() рдкреНрд░рдпреЛрдЧ рдЧрд░реЗрд░ рджреЗрдЦрд╛рдКред</li>
                  <li>рдПрдЙрдЯреИ рд▓рд╛рдЗрди рел рдкрдЯрдХ рджреЗрдЦрд╛рдЙрдиреЗ code рд▓реЗрдЦред</li>
                  <li>Python рдкреНрд░рдпреЛрдЧ рдЧрд░реНрдиреЗ рел рдкреНрд░рд╕рд┐рджреНрдз рдХрдореНрдкрдиреА comment рдорд╛ рд▓реЗрдЦред</li>
                </ul>
              </div>
            )}

            {currentStep === 7 && (
              <div className="mt-8 space-y-6">
                <h3 className="text-lg font-semibold">рдХреНрд╡рд┐рдЬ</h3>
                <ul className="list-disc pl-6 text-neutral-700 space-y-1">
                  <li>Creator? тЖТ Guido van Rossum</li>
                  <li>Public year? тЖТ 1991</li>
                  <li>рдирд╛рдо? тЖТ Comedy Show</li>
                  <li>Language type? тЖТ Interpreted</li>
                </ul>
                <h4 className="font-medium">Fill in the blanks</h4>
                <ul className="list-disc pl-6 text-neutral-700 space-y-1">
                  <li>Python рдХреЛ рдирд╛рдо <em>Comedy Show</em> рдмрд╛рдЯ рдЖрдПрдХреЛ рд╣реЛред</li>
                  <li>print() рд▓реЗ <em>Output</em> рджреЗрдЦрд╛рдЙрдБрдЫред</li>
                  <li>Text/string рд▓рд╛рдИ define рдЧрд░реНрди <em>quotes</em> рдкреНрд░рдпреЛрдЧ рд╣реБрдиреНрдЫред</li>
                </ul>
                <h4 className="font-medium">Output Based</h4>
                <CodeSnippet language="python" code={`print("Hi" * 3)`} onRun={tryNowNepali} />
                <CodeSnippet language="python" code={`Print("Hello")`} onRun={tryNowNepali} />
              </div>
            )}
          </div>
        </div>

        <Dialog open={runnerOpenNp} onOpenChange={setRunnerOpenNp}>
          <DialogContent className="sm:max-w-4xl">
            <DialogTitle>Try Now (Python)</DialogTitle>
            <PythonCodeRunner initialCode={runnerCodeNp} height={560} />
          </DialogContent>
        </Dialog>
      </div>
    );
  }

  return (
    <div className="flex-1">
      <div className="h-full flex flex-col">
        <div className="lg:min-h-[350px] lg:w-[1200px] w-full px-6 lg:px-0 flex flex-col ml-12 h-full relative">
          <div className="text-left mt-4 ml-1">
            <h1 className="text-2xl lg:text-4xl font-bold text-neutral-700">
              {currentStep === 1 ? "Python Introduction" : currentStep === 2 ? "Python History" : currentStep === 3 ? "Python Popularity" : currentStep === 4 ? "Python Applications" : currentStep === 5 ? "First Program" : "Problems"}
            </h1>
          </div>
          
          {/* Python Introduction Content - Step 1 */}
          {currentStep === 1 && (
            <div className="mt-8 space-y-8">
              <div className="space-y-8">
                <div>
                  <h3 className="text-xl font-semibold text-neutral-800 mb-6">Introduction</h3>
                  <p className="text-neutral-700 mb-4">Python is a high-level programming language, closer to human language than machine code.</p>
                  <p className="text-neutral-600 mb-8">It is interpreted (no compiling needed, runs directly) and general-purpose (used for web, AI, data science, automation, and more).</p>
                  
                  <div className="mb-8">
                    <p className="text-green-600 font-semibold text-base mb-3">тЬЕ Example:</p>
                    <CodeSnippet language="python" code={`print("Hello, Python!")`} onRun={(code) => handleTryNow(code)} />
										<div className="mt-3">
                    						<Button 
						  onClick={() => handleTryNow('print("Hello, Python!")')}
						  variant="secondary"
						  size="sm"
						>
						  TRY NOW
						</Button>
										</div>
                                      </div>
                  
                  						<div className="mb-8">
							<p className="text-neutral-800 font-semibold text-base mb-3">ЁЯСЙ Breakdown</p>
							<div className="overflow-x-auto">
								<table className="w-full text-sm text-left text-neutral-700 border border-gray-200 rounded-lg">
									<thead className="bg-gray-100 text-neutral-800">
										<tr>
											<th className="px-4 py-2 w-40">Part</th>
											<th className="px-4 py-2">Meaning</th>
										</tr>
									</thead>
									<tbody>
										<tr className="border-t">
											<td className="px-4 py-2 font-semibold whitespace-nowrap">print</td>
											<td className="px-4 py-2">Built-in function that displays output.</td>
										</tr>
										<tr className="border-t">
											<td className="px-4 py-2 font-semibold whitespace-nowrap">()</td>
											<td className="px-4 py-2">Parentheses to pass arguments to the function.</td>
										</tr>
										<tr className="border-t">
											<td className="px-4 py-2 font-semibold whitespace-nowrap">" " or ' '</td>
											<td className="px-4 py-2">Quotation marks to represent text (a string).</td>
										</tr>
									</tbody>
								</table>
							</div>
						</div>
                  
                  <div className="mb-8">
                    <p className="text-red-600 font-semibold text-base mb-3">тЭМ Wrong Example:</p>
                    <CodeSnippet language="python" code={`print(Hello, Python!)`} onRun={(code) => handleTryNow(code)} />
										<div className="mt-3">
                    						<Button 
						  onClick={() => handleTryNow('print(Hello, Python!)')}
						  variant="secondary"
						  size="sm"
						>
						  TRY NOW
						</Button>
										</div>
                                  </div>
              
                  <div className="space-y-4">
                    <p className="text-sm text-gray-600">ЁЯСЙ Why error? тЖТ Because no quotes. Python thinks Hello is a variable.</p>
                    <p className="text-blue-600 text-base"> Motivation: Every app starts with "Hello, World!" тЖТ Facebook, Google, and even ChatGPT's first code had print() somewhere in it.</p>
                    <p className="text-purple-600 text-base">ЁЯШВ Fun: print() is like your personal loudspeaker ЁЯУв тАФ Python will shout anything you give it.</p>
                  </div>
                </div>
              </div>
            </div>
          )}
          
          {/* Python Basics Content - Step 2 */}
          {currentStep === 2 && (
            <div className="mt-8 space-y-8">
              <div className="space-y-8">
                <div>
                  <h3 className="text-xl font-semibold text-neutral-800 mb-6">History</h3>
                  <ul className="text-neutral-700 space-y-3 mb-8">
                    <li>Created by Guido van Rossum in the late 1980s.</li>
                    <li>Released in 1991.</li>
                    <li>Named after Monty Python's Flying Circus (a comedy group, not the snake).</li>
                    <li>Goal: simple + fun + powerful.</li>
                  </ul>
                  
                  <div className="space-y-4">
                    <p className="text-blue-600 text-base"> Motivation: Guido's dream was a language that anyone could learn. That's why today kids, scientists, and companies like Google use it.</p>
                    <p className="text-purple-600 text-base">ЁЯШВ Fun: Tell someone "I'm learning Python" тЖТ they'll imagine snakes ЁЯРН around you. NopeтАж just code.</p>
                  </div>
                </div>
              </div>
            </div>
          )}
          
          {/* Python Popularity Content - Step 3 */}
          {currentStep === 3 && (
            <div className="mt-8 space-y-8">
              <div className="space-y-8">
                <div>
                  <h3 className="text-xl font-semibold text-neutral-800 mb-6">Why Python is Popular</h3>
                  								  <div className="overflow-x-auto mb-8">
									<table className="w-full text-sm text-left text-neutral-700 border border-gray-200 rounded-lg">
										<thead className="bg-gray-100 text-neutral-800">
											<tr>
												<th className="px-4 py-2 w-64">Reason</th>
												<th className="px-4 py-2">Details</th>
											</tr>
										</thead>
										<tbody>
											<tr className="border-t">
												<td className="px-4 py-2 font-semibold whitespace-nowrap">Simple Syntax</td>
												<td className="px-4 py-2">Almost like English; easy to read and write.</td>
											</tr>
											<tr className="border-t">
												<td className="px-4 py-2 font-semibold whitespace-nowrap">Versatile</td>
												<td className="px-4 py-2">Used across web, data, automation, scripting, and more.</td>
											</tr>
											<tr className="border-t">
												<td className="px-4 py-2 font-semibold whitespace-nowrap">Huge Libraries</td>
												<td className="px-4 py-2">Rich ecosystem: NumPy, Pandas, TensorFlow, FastAPI, etc.</td>
											</tr>
											<tr className="border-t">
												<td className="px-4 py-2 font-semibold whitespace-nowrap">CrossтАСplatform</td>
												<td className="px-4 py-2">Runs on Windows, macOS, Linux, and more.</td>
											</tr>
											<tr className="border-t">
												<td className="px-4 py-2 font-semibold whitespace-nowrap">Community</td>
												<td className="px-4 py-2">Millions of developers; tons of tutorials and support.</td>
											</tr>
										</tbody>
									</table>
								  </div>
                  
                  <div className="mb-8">
                    <p className="text-blue-600 font-semibold text-base mb-3"> Motivation:</p>
                    <ul className="text-neutral-700 space-y-2">
                      <li><strong>Instagram</strong> тЖТ built backend with Python.</li>
                      <li><strong>YouTube</strong> тЖТ uses Python for video features.</li>
                      <li><strong>NASA</strong> тЖТ uses Python for space missions ЁЯЪА.</li>
                    </ul>
              </div>
              
                  <p className="text-purple-600 text-base">ЁЯШВ Fun: Even people scared of snakes ЁЯРН love Python the language.</p>
                </div>
              </div>
            </div>
          )}
          
          {/* Python Applications Content - Step 4 */}
          {currentStep === 4 && (
            <div className="mt-8 space-y-8">
              <div className="space-y-8">
                <div>
                  <h3 className="text-xl font-semibold text-neutral-800 mb-6">Applications of Python</h3>
                  <p className="text-neutral-700 mb-6">Python powers many industries:</p>
                  
                  								  <div className="overflow-x-auto mb-8">
									<table className="w-full text-sm text-left text-neutral-700 border border-gray-200 rounded-lg">
										<thead className="bg-gray-100 text-neutral-800">
											<tr>
												<th className="px-4 py-2 w-64">Area</th>
												<th className="px-4 py-2">Examples</th>
											</tr>
										</thead>
										<tbody>
											<tr className="border-t">
												<td className="px-4 py-2 font-semibold whitespace-nowrap">ЁЯМН Web Development</td>
												<td className="px-4 py-2">Instagram, Reddit (Django/Flask)</td>
											</tr>
											<tr className="border-t">
												<td className="px-4 py-2 font-semibold whitespace-nowrap">ЁЯУК Data Science</td>
												<td className="px-4 py-2">Netflix recommendations, Pandas/NumPy</td>
											</tr>
											<tr className="border-t">
												<td className="px-4 py-2 font-semibold whitespace-nowrap">ЁЯдЦ AI & ML</td>
												<td className="px-4 py-2">OpenAI/ChatGPT, TensorFlow, PyTorch</td>
											</tr>
											<tr className="border-t">
												<td className="px-4 py-2 font-semibold whitespace-nowrap">тЪЩя╕П Automation</td>
												<td className="px-4 py-2">Google internal tools, scripts</td>
											</tr>
											<tr className="border-t">
												<td className="px-4 py-2 font-semibold whitespace-nowrap">ЁЯОо Games</td>
												<td className="px-4 py-2">Pygame library for 2D games</td>
											</tr>
										</tbody>
									</table>
								  </div>
              
                  <div className="space-y-4">
                    <p className="text-blue-600 text-base"> Motivation: Learn Python тЖТ build your own mini-Netflix, chatbot, or even a game.</p>
                    <p className="text-purple-600 text-base">ЁЯШВ Fun: CarefulтАж after learning Python, your friends will say: "Bro, make me the next Instagram!" ЁЯШВ</p>
                  </div>
                </div>
              </div>
            </div>
          )}
          
          {/* Python First Program Content - Step 5 */}
          {currentStep === 5 && (
            <div className="mt-8 space-y-8">
              <div className="space-y-8">
                <div>
                  <h3 className="text-xl font-semibold text-neutral-800 mb-6">First Program</h3>
                  
                  <div className="mb-8">
                    <p className="text-green-600 font-semibold text-base mb-3">тЬЕ Example:</p>
                    <CodeSnippet language="python" code={`print("Welcome to Python Programming!")`} onRun={(code) => handleTryNow(code)} />
										<div className="mt-3">
                    						<Button 
						  onClick={() => handleTryNow('print("Welcome to Python Programming!")')}
						  variant="secondary"
						  size="sm"
						>
						  TRY NOW
						</Button>
										</div>
                                      </div>
                  
                  						<div className="mb-8">
							<p className="text-neutral-800 font-semibold text-base mb-3">ЁЯСЙ Breakdown:</p>
							<div className="overflow-x-auto">
								<table className="w-full text-sm text-left text-neutral-700 border border-gray-200 rounded-lg">
									<thead className="bg-gray-100 text-neutral-800">
										<tr>
											<th className="px-4 py-2 w-40">Part</th>
											<th className="px-4 py-2">Meaning</th>
										</tr>
									</thead>
									<tbody>
										<tr className="border-t">
											<td className="px-4 py-2 font-semibold whitespace-nowrap">print</td>
											<td className="px-4 py-2">Command to display output.</td>
										</tr>
										<tr className="border-t">
											<td className="px-4 py-2 font-semibold whitespace-nowrap">()</td>
											<td className="px-4 py-2">Container for information (arguments).</td>
										</tr>
										<tr className="border-t">
											<td className="px-4 py-2 font-semibold whitespace-nowrap">"Welcome to Python Programming!"</td>
											<td className="px-4 py-2">Text value (string) passed to print.</td>
										</tr>
									</tbody>
								</table>
							</div>
						</div>
                  
                  <div className="mb-8 space-y-4">
                    <p className="text-blue-600 text-base"> Motivation: This is your first step as a developer тАФ today it's text, tomorrow maybe AI ЁЯдЦ.</p>
                    <p className="text-purple-600 text-base"> Fun: Congrats ЁЯОЙ you're officially a Python whisperer ЁЯРНтЬи.</p>
                  </div>
                </div>
              </div>
            </div>
          )}
          
          {/* Python Problems Content - Step 6 */}
          {currentStep === 6 && (
            <div className="mt-8 space-y-8">
              <div className="space-y-8">
                <div>
                  <h3 className="text-xl font-semibold text-neutral-800 mb-6">Problems</h3>
                  
                  <div className="space-y-6">
                    <div className="space-y-4">
                      <p className="text-neutral-800 font-semibold text-base">ЁЯФз Practice Problems (Subjective)</p>
                      
                      <div className="space-y-4">
                        <div className="space-y-2">
                          <p className="text-neutral-700">1. Print your name.</p>
                          <div className="flex gap-2">
                            									<Button 
									  onClick={() => handleTryNow('', 'print("Your Name")', 'Print your name.')}
									  variant="secondary"
									  size="sm"
									>
									  TRY NOW
									</Button>
                            <Button 
                              onClick={() => setShowHints(true)}
                              className="bg-blue-600 hover:bg-blue-700 text-white font-semibold px-4 py-2 rounded-lg"
                              size="sm"
                            >
                              HINTS
                            </Button>
                          </div>
                        </div>

                        <div className="space-y-2">
                          <p className="text-neutral-700">2. Print the sentence: Python is fun!.</p>
                          <div className="flex gap-2">
                            									<Button 
									  onClick={() => handleTryNow('', 'print("Python is fun!")', 'Print the sentence: Python is fun!.')}
									  variant="secondary"
									  size="sm"
									>
									  TRY NOW
									</Button>
                            <Button 
                              onClick={() => setShowHints(true)}
                              className="bg-blue-600 hover:bg-blue-700 text-white font-semibold px-4 py-2 rounded-lg"
                              size="sm"
                            >
                              HINTS
                            </Button>
                          </div>
                        </div>

                        <div className="space-y-2">
                          <p className="text-neutral-700">3. Print 3 different lines using three print() statements.</p>
                          <div className="flex gap-2">
                            									<Button 
									  onClick={() => handleTryNow('', 'print("Line 1")\nprint("Line 2")\nprint("Line 3")', 'Print 3 different lines using three print() statements.')}
									  variant="secondary"
									  size="sm"
									>
									  TRY NOW
									</Button>
                            <Button 
                              onClick={() => setShowHints(true)}
                              className="bg-blue-600 hover:bg-blue-700 text-white font-semibold px-4 py-2 rounded-lg"
                              size="sm"
                            >
                              HINTS
                            </Button>
                          </div>
                        </div>

                        <div className="space-y-2">
                          <p className="text-neutral-700">4. Print the same word 5 times using:</p>
                          <CodeSnippet language="python" code={`print("Hello " * 5)`} />
                          <div className="mt-3 flex gap-2">
                            									<Button 
									  onClick={() => handleTryNow('', 'print("Hello " * 5)', 'Print the same word 5 times using: print("Hello " * 5)')}
									  variant="secondary"
									  size="sm"
									>
									  TRY NOW
									</Button>
                            <Button 
                              onClick={() => setShowHints(true)}
                              className="bg-blue-600 hover:bg-blue-700 text-white font-semibold px-4 py-2 rounded-lg"
                              size="sm"
                            >
                              HINTS
                            </Button>
                          </div>
                        </div>

                        <div className="space-y-2">
                          <p className="text-neutral-700">5. Research & write (in comments) 5 companies that use Python.</p>
                          <div className="flex gap-2">
                            									<Button 
									  onClick={() => handleTryNow('', '# Google\n# Instagram\n# Netflix\n# Spotify\n# Dropbox', 'Research & write (in comments) 5 companies that use Python.')}
									  variant="secondary"
									  size="sm"
									>
									  TRY NOW
									</Button>
                            <Button 
                              onClick={() => setShowHints(true)}
                              className="bg-blue-600 hover:bg-blue-700 text-white font-semibold px-4 py-2 rounded-lg"
                              size="sm"
                            >
                              HINTS
                            </Button>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          )}
          
          {/* Show modals */}
          {showCodePlayground && <CodePlayground />}
          {showHints && <HintsModal />}
          
          {/* Navigation Button */}
          <div className="fixed bottom-6 right-6 z-50">
            {currentStep === 1 ? (
              <Button
                variant="secondary"
                size="lg"
                className="px-6"
                asChild
              >
                <a href="/lesson/lesson-1/python-history">
                  Next: Python History тЖТ
                </a>
              </Button>
            ) : currentStep === 2 ? (
              <Button
                variant="secondary"
                size="lg"
                className="px-6"
                asChild
              >
                <a href="/lesson/lesson-1/python-popularity">
                  Next: Python Popularity тЖТ
                </a>
              </Button>
            ) : currentStep === 3 ? (
              <Button
                variant="secondary"
                size="lg"
                className="px-6"
                asChild
              >
                <a href="/lesson/lesson-1/python-applications">
                  Next: Python Applications тЖТ
                </a>
              </Button>
            ) : currentStep === 4 ? (
              <Button
                variant="secondary"
                size="lg"
                className="px-6"
                asChild
              >
                <a href="/lesson/lesson-1/python-first-program">
                  Next: First Program тЖТ
                </a>
              </Button>
            ) : currentStep === 5 ? (
              <Button
                variant="secondary"
                size="lg"
                className="px-6"
                asChild
              >
                <a href="/lesson/lesson-1/python-problems">
                  Next: Problems тЖТ
                </a>
              </Button>
            ) : currentStep === 6 ? (
              <Button
                variant="secondary"
                size="lg"
                className="px-6"
                asChild
              >
                <a href="/lesson/lesson-1/python-quiz">
                  Next: Quiz тЖТ
                </a>
              </Button>
            ) : (
              <Button
                variant="secondary"
                size="lg"
                className="px-6"
                onClick={handleFinishLesson}
                disabled={isCompleting}
              >
                {isCompleting ? "Completing..." : "Finish Lesson ЁЯОЙ"}
              </Button>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}; 